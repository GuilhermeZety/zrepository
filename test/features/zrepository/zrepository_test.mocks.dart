// Mocks generated by Mockito 5.3.2 from annotations
// in zrepository/test/features/zrepository/zrepository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:streaming_shared_preferences/src/adapters/adapters.dart' as _i4;
import 'package:streaming_shared_preferences/src/preference/preference.dart'
    as _i2;
import 'package:streaming_shared_preferences/src/streaming_shared_preferences.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePreference_0<T> extends _i1.SmartFake implements _i2.Preference<T> {
  _FakePreference_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [StreamingSharedPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockStreamingSharedPreferences extends _i1.Mock
    implements _i3.StreamingSharedPreferences {
  MockStreamingSharedPreferences() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Preference<Set<String>> getKeys() => (super.noSuchMethod(
        Invocation.method(
          #getKeys,
          [],
        ),
        returnValue: _FakePreference_0<Set<String>>(
          this,
          Invocation.method(
            #getKeys,
            [],
          ),
        ),
      ) as _i2.Preference<Set<String>>);
  @override
  _i2.Preference<bool> getBool(
    String? key, {
    required bool? defaultValue,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBool,
          [key],
          {#defaultValue: defaultValue},
        ),
        returnValue: _FakePreference_0<bool>(
          this,
          Invocation.method(
            #getBool,
            [key],
            {#defaultValue: defaultValue},
          ),
        ),
      ) as _i2.Preference<bool>);
  @override
  _i2.Preference<int> getInt(
    String? key, {
    required int? defaultValue,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getInt,
          [key],
          {#defaultValue: defaultValue},
        ),
        returnValue: _FakePreference_0<int>(
          this,
          Invocation.method(
            #getInt,
            [key],
            {#defaultValue: defaultValue},
          ),
        ),
      ) as _i2.Preference<int>);
  @override
  _i2.Preference<double> getDouble(
    String? key, {
    required double? defaultValue,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDouble,
          [key],
          {#defaultValue: defaultValue},
        ),
        returnValue: _FakePreference_0<double>(
          this,
          Invocation.method(
            #getDouble,
            [key],
            {#defaultValue: defaultValue},
          ),
        ),
      ) as _i2.Preference<double>);
  @override
  _i2.Preference<String> getString(
    String? key, {
    required String? defaultValue,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getString,
          [key],
          {#defaultValue: defaultValue},
        ),
        returnValue: _FakePreference_0<String>(
          this,
          Invocation.method(
            #getString,
            [key],
            {#defaultValue: defaultValue},
          ),
        ),
      ) as _i2.Preference<String>);
  @override
  _i2.Preference<List<String>> getStringList(
    String? key, {
    required List<String>? defaultValue,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getStringList,
          [key],
          {#defaultValue: defaultValue},
        ),
        returnValue: _FakePreference_0<List<String>>(
          this,
          Invocation.method(
            #getStringList,
            [key],
            {#defaultValue: defaultValue},
          ),
        ),
      ) as _i2.Preference<List<String>>);
  @override
  _i2.Preference<T> getCustomValue<T>(
    String? key, {
    required T? defaultValue,
    required _i4.PreferenceAdapter<T>? adapter,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCustomValue,
          [key],
          {
            #defaultValue: defaultValue,
            #adapter: adapter,
          },
        ),
        returnValue: _FakePreference_0<T>(
          this,
          Invocation.method(
            #getCustomValue,
            [key],
            {
              #defaultValue: defaultValue,
              #adapter: adapter,
            },
          ),
        ),
      ) as _i2.Preference<T>);
  @override
  _i5.Future<bool> setBool(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBool,
          [
            key,
            value,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<bool> setInt(
    String? key,
    int? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInt,
          [
            key,
            value,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<bool> setDouble(
    String? key,
    double? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDouble,
          [
            key,
            value,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<bool> setString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<bool> setStringList(
    String? key,
    List<String>? values,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setStringList,
          [
            key,
            values,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<bool> setCustomValue<T>(
    String? key,
    T? value, {
    required _i4.PreferenceAdapter<T>? adapter,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCustomValue,
          [
            key,
            value,
          ],
          {#adapter: adapter},
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<bool> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<bool> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}
